# -*- coding: utf-8 -*-
"""Movie Recommendation System

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MMD-ynlSnCRDUvA8ekTcl4HqtUZ4U_lR

# **Movie Recommendation System**

**Import Library**
"""

import pandas as pd

import numpy as np

"""**Import dataset**"""

df=pd.read_csv('https://github.com/YBI-Foundation/Dataset/raw/main/Movies%20Recommendation.csv')

df.head()

df.info()

df.shape

df.columns

"""**Get Feature Selection**"""

df_features =df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features

X=df_features['Movie_Genre'] + ' ' + df_features['Movie_Keywords'] + ' ' +df_features['Movie_Tagline'] + ' ' + df_features['Movie_Cast'] + ' ' + df_features['Movie_Director']

X

X.shape

"""**Get Feature Text Conversion to Token**"""

from sklearn.feature_extraction.text import TfidfVectorizer

tfid=TfidfVectorizer()

X=tfid.fit_transform(X)

X.shape

print(X)

"""**Get Similarity Score using Cosine Similarity**"""

from sklearn.metrics.pairwise import cosine_similarity

Similarity_Score=cosine_similarity(X)

Similarity_Score

Similarity_Score.shape

"""**Get Movie Name as Input from User and validate for closest spelling**"""

Favourite_Movie_Name=input('Enter your fav movie name : ')

All_Movies_Title_List=df['Movie_Title'].tolist()

import difflib

Movie_Recommendation=difflib.get_close_matches(Favourite_Movie_Name, All_Movies_Title_List)
print(Movie_Recommendation)

Close_Match=Movie_Recommendation[0]
print(Close_Match)

Index_of_Class_Match_Movie=df[df.Movie_Title==Close_Match]['Movie_ID'].values[0]
print(Index_of_Class_Match_Movie)

Recommendation_Score=list(enumerate(Similarity_Score[Index_of_Class_Match_Movie]))
print(Recommendation_Score)

len(Recommendation_Score)

"""**Get all movies sort based on recommendation score wrt favourite movie**"""

Sort_Similar_Movies=sorted(Recommendation_Score,key=lambda x:x[1],reverse=True)
print(Sort_Similar_Movies)

i=1
for movie in Sort_Similar_Movies:
  index=movie[0]
  title_from_index=df[df.index==index]['Movie_Title'].values[0]
  if(i<31):
    print(i,',',title_from_index)
    i+=1

"""# **Top 10 Movie Recommendation System**"""

Movie_Name=input('Enter your Fav movie name :')
list_of_all_titles=df['Movie_Title'].tolist()
find_close_match=difflib.get_close_matches(Movie_Name, list_of_all_titles)
Close_Match=find_close_match[0]
Index_of_Movie=df[df.Movie_Title==Close_Match]['Movie_ID'].values[0]
recommendation_score=list(enumerate(Similarity_Score[Index_of_Movie]))
sorted_similar_movie=sorted(recommendation_score, key= lambda x:x[1],reverse=True)
i=1
for movie in sorted_similar_movie:
  index=movie[0]
  title_from_index=df[df.Movie_ID==index]['Movie_Title'].values
  if(i<11):
    print(i,',',title_from_index)
    i+=1